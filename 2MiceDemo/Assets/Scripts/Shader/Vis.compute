#pragma kernel Vis

// Input
Texture2D<float4> Input;
StructuredBuffer<float3> Marks;
RWTexture2D<float4> Output;
float2 P1;
float2 P2;
bool IsBG;


[numthreads(8, 8, 1)]
void Vis(uint3 id : SV_DispatchThreadID)
{
    uint2 srcSize;
    Input.GetDimensions(srcSize.x, srcSize.y);
    uint2 destSize;
    Output.GetDimensions(destSize.x, destSize.y);

    if(destSize.x <= id.x || destSize.y <= id.y)
        return;
    // mirror
    uint2 tgtXY = uint2(destSize.x-1-id.x, id.y);

    float2 roi_shape = (P2 - P1) * srcSize;

    float2 sampleUnit = float2(float(srcSize.x) / destSize.x, float(srcSize.y) / destSize.y);

    if (IsBG) {
        Output[tgtXY] = Input[min(uint2(sampleUnit.x * id.x, sampleUnit.y * id.y), srcSize)];
    }
    else {
        Output[tgtXY] = float4(0, 0, 0, 0);
    }

    // Draw rect
    float2 p1 = float2(P1.x, 1-P1.y) * destSize;
    float2 p2 = float2(P2.x, 1-P2.y) * destSize;
    float2 idF = float2(id.x, id.y);
    float rectThickness = 1.5;
    if (idF.y >= p2.y && idF.y <= p1.y) {
        if (abs(p1.x - idF.x) < rectThickness) Output[tgtXY] = float4(0, 1, 0, 0.6);
        if (abs(p2.x - idF.x) < rectThickness) Output[tgtXY] = float4(0, 1, 0, 0.6);
    }
    if (idF.x >= p1.x && idF.x <= p2.x) {
        if (abs(p1.y - idF.y) < rectThickness) Output[tgtXY] = float4(0, 1, 0, 0.6);
        if (abs(p2.y - idF.y) < rectThickness) Output[tgtXY] = float4(0, 1, 0, 0.6);
    }

    // Draw grid
    uint gridThickness = 2;
    if (id.y < gridThickness || id.y-destSize.y/2 < gridThickness || id.y >= destSize.y-gridThickness ||
        id.x < gridThickness || id.x-destSize.x/2 < gridThickness || id.x >= destSize.x-gridThickness) {
            Output[tgtXY] = float4(0, 0, 0, 0.5);
    }

    // Draw marks
    for (uint i = 0; i < 468; i++) {
        float3 pt = Marks[i];
        float px = pt.x / sampleUnit.x;
        float py = (destSize.y - pt.y) / sampleUnit.y;
        float dist2 = (px-id.x) * (px-id.x) + (py-id.y) * (py-id.y);
        if (dist2 < 4) {
            if (i == 93 || i == 323 || i == 4 || i == 10 || i == 152)
                Output[tgtXY] = float4(1, 0, 0, 1);
            else
                Output[tgtXY] = float4(0, 0, 1, 1);
            break;
        }
    }
}
